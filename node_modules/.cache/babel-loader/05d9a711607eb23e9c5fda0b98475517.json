{"ast":null,"code":"var _jsxFileName = \"D:\\\\Addin Munawwar Yusuf\\\\GitHub\\\\React-moviewarehouse\\\\src\\\\components\\\\Movie.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Movie.module.css\";\nimport bdClasses from '../components/description/Backdrop.module.css';\nimport React, { useContext, useState } from \"react\";\nimport { MovieContext } from \"../context/MovieData\";\nimport { PopUpContext } from \"../context/PopUp\";\nimport { DescContext } from \"../context/DescContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = props => {\n  _s();\n\n  const [wishlist, setWishlist] = useContext(MovieContext).slice(2, 4);\n  const setPopUpText = useContext(PopUpContext)[3];\n  const showPopup = useContext(PopUpContext)[4];\n  const i = wishlist.filter(obj => obj.id === props.id).length;\n  const [count, setCount] = useState(i);\n\n  const handleWishlist = () => {\n    if (count === 1) {\n      setCount(0);\n\n      if (props.type === 'movie') {\n        setPopUpText(`'${props.title}' is Removed from the Wishlist`);\n      } else {\n        setPopUpText(`'${props.name}' is Removed from the Wishlist`);\n      }\n\n      showPopup();\n      setWishlist(prevWishlist => prevWishlist.filter(x => {\n        return x.id !== props.id;\n      }));\n    } else {\n      setWishlist(prevWishlist => [...prevWishlist, props.post]);\n      setCount(1);\n\n      if (props.type === 'tv') {\n        setPopUpText(`'${props.name}' is Added to the Wishlist`);\n      } else {\n        setPopUpText(`'${props.title}' is Added to the Wishlist`);\n      }\n\n      showPopup();\n    }\n  };\n\n  const dynamicPoster = {\n    backgroundImage: `url(https://image.tmdb.org/t/p/original${props.posterUrl})`\n  };\n  let buttonClass = classes.addButton;\n\n  if (count === 1) {\n    buttonClass = classes.removeButton;\n  }\n\n  const setInsight = useContext(DescContext)[1];\n  const setOpen = useContext(DescContext)[3];\n\n  const handleDesc = params => {\n    setInsight(props.post);\n    setOpen(bdClasses.backdrop_show);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.movie,\n    style: dynamicPoster,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.rating,\n      children: [props.rating, \"\\u2B50\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: buttonClass,\n      onClick: handleWishlist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.title,\n      onClick: handleDesc,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.titleText,\n        children: [props.title, props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movie, \"oyGhGLLfmsbKs1ItgmcUXBzhQjg=\");\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["D:/Addin Munawwar Yusuf/GitHub/React-moviewarehouse/src/components/Movie.js"],"names":["classes","bdClasses","React","useContext","useState","MovieContext","PopUpContext","DescContext","Movie","props","wishlist","setWishlist","slice","setPopUpText","showPopup","i","filter","obj","id","length","count","setCount","handleWishlist","type","title","name","prevWishlist","x","post","dynamicPoster","backgroundImage","posterUrl","buttonClass","addButton","removeButton","setInsight","setOpen","handleDesc","params","backdrop_show","movie","rating","titleText"],"mappings":"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","sourcesContent":["import classes from \"./Movie.module.css\";\r\nimport bdClasses from '../components/description/Backdrop.module.css';\r\nimport React, { useContext, useState } from \"react\";\r\n\r\nimport { MovieContext } from \"../context/MovieData\";\r\nimport { PopUpContext } from \"../context/PopUp\";\r\nimport { DescContext } from \"../context/DescContext\";\r\n\r\nconst Movie = (props) => {\r\n  const [wishlist, setWishlist] = useContext(MovieContext).slice(2,4);\r\n  const setPopUpText = useContext(PopUpContext)[3];\r\n  const showPopup = useContext(PopUpContext)[4];\r\n  const i = wishlist.filter((obj) => obj.id === props.id).length;\r\n  const [count, setCount] = useState(i);\r\n\r\n  const handleWishlist = () => {\r\n    if (count === 1) {\r\n      setCount(0);\r\n      if (props.type === 'movie') {\r\n        setPopUpText(`'${props.title}' is Removed from the Wishlist`)\r\n        \r\n      } else {\r\n        setPopUpText(`'${props.name}' is Removed from the Wishlist`)\r\n        \r\n      }\r\n      showPopup();\r\n      setWishlist((prevWishlist) =>\r\n        prevWishlist.filter((x) => {\r\n          return x.id !== props.id;\r\n        })\r\n      );  \r\n    } else {\r\n      setWishlist((prevWishlist) => [\r\n        ...prevWishlist,\r\n        props.post\r\n      ]);\r\n      setCount(1);\r\n      if (props.type === 'tv') {\r\n        setPopUpText(`'${props.name}' is Added to the Wishlist`)\r\n      } else {\r\n        setPopUpText(`'${props.title}' is Added to the Wishlist`)\r\n      }\r\n      showPopup();\r\n    }\r\n  };\r\n\r\n  const dynamicPoster = {\r\n    backgroundImage: `url(https://image.tmdb.org/t/p/original${props.posterUrl})`,\r\n  };\r\n\r\n  let buttonClass = classes.addButton\r\n\r\n  if (count === 1) {\r\n    buttonClass = classes.removeButton\r\n  } \r\n\r\n  const setInsight = useContext(DescContext)[1];\r\n  const setOpen = useContext(DescContext)[3];\r\n  const handleDesc = (params) => {\r\n    setInsight(props.post)\r\n    setOpen(bdClasses.backdrop_show)\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className={classes.movie} style={dynamicPoster}>\r\n      <div className={classes.rating}>{props.rating}‚≠ê</div>\r\n      <div\r\n        className={buttonClass}\r\n        onClick={handleWishlist}\r\n      />\r\n      <div className={classes.title} onClick={handleDesc}>\r\n        <p className={classes.titleText}>\r\n          {props.title}\r\n          {props.name}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}